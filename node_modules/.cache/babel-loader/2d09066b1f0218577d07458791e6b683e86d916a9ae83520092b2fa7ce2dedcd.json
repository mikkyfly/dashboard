{"ast":null,"code":"import { tokens } from \"../theme\";\n/*\r\n//import { mockLineData as data } from \"../data/mockData\"; \r\nconst value_state = 'value_state';\r\nconst myWs = new WebSocket('ws://localhost:8000');\r\nconst frontDatabase = [];\r\n// обработчик проинформирует в консоль когда соединение установится\r\nmyWs.onopen = function () {\r\n    console.log('подключился');\r\n};\r\n// обработчик сообщений от сервера\r\nmyWs.onmessage = function (message) {\r\n    const jsonParse = JSON.parse(message.data);\r\n    try {\r\n        //console.log(jsonParse[0]['value_state']);\r\n        for (let i = 0; i < jsonParse.length; i++) {\r\n            console.log(jsonParse[i]['value_state']);\r\n            //alert(jsonParse[i]['value_state']);\r\n            frontDatabase[i] = jsonParse[i]['value_state'];  \r\n            //mockLineData.data.x[i] = frontDatabase[i];               \r\n        }\r\n        //console.log(frontDatabase);\r\n    } catch (error) {\r\n        console.log('Error: ', error);\r\n    }\r\n};*/\n\nexport const mockLineData = [{\n  id: \"ИБП Uвх\",\n  color: tokens(\"dark\").redAccent[200],\n  data: [{\n    x: 0,\n    //\"plane\"\n    y: 1\n  }]\n}];","map":{"version":3,"names":["tokens","mockLineData","id","color","redAccent","data","x","y"],"sources":["C:/db/dashboard_react/src/data/dataLineGraph.js"],"sourcesContent":["import { tokens } from \"../theme\";\r\n/*\r\n//import { mockLineData as data } from \"../data/mockData\"; \r\nconst value_state = 'value_state';\r\nconst myWs = new WebSocket('ws://localhost:8000');\r\nconst frontDatabase = [];\r\n// обработчик проинформирует в консоль когда соединение установится\r\nmyWs.onopen = function () {\r\n    console.log('подключился');\r\n};\r\n// обработчик сообщений от сервера\r\nmyWs.onmessage = function (message) {\r\n    const jsonParse = JSON.parse(message.data);\r\n    try {\r\n        //console.log(jsonParse[0]['value_state']);\r\n        for (let i = 0; i < jsonParse.length; i++) {\r\n            console.log(jsonParse[i]['value_state']);\r\n            //alert(jsonParse[i]['value_state']);\r\n            frontDatabase[i] = jsonParse[i]['value_state'];  \r\n            //mockLineData.data.x[i] = frontDatabase[i];               \r\n        }\r\n        //console.log(frontDatabase);\r\n    } catch (error) {\r\n        console.log('Error: ', error);\r\n    }\r\n};*/\r\n\r\nexport const mockLineData = [\r\n  {\r\n    id: \"ИБП Uвх\",\r\n    color: tokens(\"dark\").redAccent[200],\r\n    data: [\r\n      {\r\n        x: 0, //\"plane\"\r\n        y: 1,\r\n      }\r\n    ],\r\n  },\r\n];"],"mappings":"AAAA,SAASA,MAAM,QAAQ,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAC1B;EACEC,EAAE,EAAE,SAAS;EACbC,KAAK,EAAEH,MAAM,CAAC,MAAM,CAAC,CAACI,SAAS,CAAC,GAAG,CAAC;EACpCC,IAAI,EAAE,CACJ;IACEC,CAAC,EAAE,CAAC;IAAE;IACNC,CAAC,EAAE;EACL,CAAC;AAEL,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}