{"ast":null,"code":"var _jsxFileName = \"C:\\\\db\\\\dashboard_react\\\\src\\\\scenes\\\\calendar\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { formatDate } from \"@fullcalendar/core\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport listPlugin from \"@fullcalendar/list\";\nimport { Box, List, ListItem, ListItemText, Typography, useTheme } from \"@mui/material\";\nimport Header from \"../../components/Header\";\nimport { tokens } from \"../../theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const [currentEvents, setCurrentEvents] = useState([]);\n  const handleDateClick = selected => {\n    const title = prompt(\"Please enter a new title for your event\");\n    const calendarApi = selected.view.calendar;\n    calendarApi.unselect();\n    if (title) {\n      calendarApi.addEvent({\n        id: `${selected.dateStr}-${title}`,\n        title,\n        start: selected.startStr,\n        end: selected.endStr,\n        allDay: selected.allDay\n      });\n    }\n  };\n  const handleEventClick = selected => {\n    if (window.confirm(`Are you sure you want to delete the event '${selected.event.title}'`)) {\n      selected.event.remove();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Calendar\",\n      subtitle: \"Full Calendar Interactive Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        flex: \"1 1 20%\",\n        backgroundColor: colors.primary[400],\n        p: \"15px\",\n        borderRadius: \"4px\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: currentEvents.map(event => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              backgroundColor: colors.greenAccent[500],\n              margin: \"10px 0\",\n              borderRadius: \"2px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: event.title,\n              secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                children: formatDate(event.start, {\n                  year: \"numeric\",\n                  month: \"short\",\n                  day: \"numeric\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flex: \"1 1 100%\",\n        ml: \"15px\",\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          height: \"75vh\",\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n          headerToolbar: {\n            left: \"prev,next today\",\n            center: \"title\",\n            right: \"dayGridMonth,timeGridWeek,timeGridDay,listMonth\"\n          },\n          initialView: \"dayGridMonth\",\n          editable: true,\n          selectable: true,\n          selectMirror: true,\n          dayMaxEvents: true,\n          select: handleDateClick,\n          eventClick: handleEventClick,\n          eventsSet: events => setCurrentEvents(events),\n          initialEvents: [{\n            id: \"12315\",\n            title: \"All-day event\",\n            date: \"2022-09-14\"\n          }, {\n            id: \"5123\",\n            title: \"Timed event\",\n            date: \"2022-09-28\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"CEl+jfRYkzwnyoRHw33njx7NRMY=\", false, function () {\n  return [useTheme];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","formatDate","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","Box","List","ListItem","ListItemText","Typography","useTheme","Header","tokens","jsxDEV","_jsxDEV","Calendar","_s","theme","colors","palette","mode","currentEvents","setCurrentEvents","handleDateClick","selected","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","dateStr","start","startStr","end","endStr","allDay","handleEventClick","window","confirm","event","remove","m","children","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","flex","backgroundColor","primary","p","borderRadius","variant","map","sx","greenAccent","margin","secondary","year","month","day","ml","height","plugins","headerToolbar","left","center","right","initialView","editable","selectable","selectMirror","dayMaxEvents","select","eventClick","eventsSet","events","initialEvents","date","_c","$RefreshReg$"],"sources":["C:/db/dashboard_react/src/scenes/calendar/index.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { formatDate } from \"@fullcalendar/core\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport {\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport { tokens } from \"../../theme\";\r\n\r\nconst Calendar = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [currentEvents, setCurrentEvents] = useState([]);\r\n\r\n  const handleDateClick = (selected) => {\r\n    const title = prompt(\"Please enter a new title for your event\");\r\n    const calendarApi = selected.view.calendar;\r\n    calendarApi.unselect();\r\n\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: `${selected.dateStr}-${title}`,\r\n        title,\r\n        start: selected.startStr,\r\n        end: selected.endStr,\r\n        allDay: selected.allDay,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (selected) => {\r\n    if (\r\n      window.confirm(\r\n        `Are you sure you want to delete the event '${selected.event.title}'`\r\n      )\r\n    ) {\r\n      selected.event.remove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"Calendar\" subtitle=\"Full Calendar Interactive Page\" />\r\n\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        {/* CALENDAR SIDEBAR */}\r\n        <Box\r\n          flex=\"1 1 20%\"\r\n          backgroundColor={colors.primary[400]}\r\n          p=\"15px\"\r\n          borderRadius=\"4px\"\r\n        >\r\n          <Typography variant=\"h5\">Events</Typography>\r\n          <List>\r\n            {currentEvents.map((event) => (\r\n              <ListItem\r\n                key={event.id}\r\n                sx={{\r\n                  backgroundColor: colors.greenAccent[500],\r\n                  margin: \"10px 0\",\r\n                  borderRadius: \"2px\",\r\n                }}\r\n              >\r\n                <ListItemText\r\n                  primary={event.title}\r\n                  secondary={\r\n                    <Typography>\r\n                      {formatDate(event.start, {\r\n                        year: \"numeric\",\r\n                        month: \"short\",\r\n                        day: \"numeric\",\r\n                      })}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n\r\n        {/* CALENDAR */}\r\n        <Box flex=\"1 1 100%\" ml=\"15px\">\r\n          <FullCalendar\r\n            height=\"75vh\"\r\n            plugins={[\r\n              dayGridPlugin,\r\n              timeGridPlugin,\r\n              interactionPlugin,\r\n              listPlugin,\r\n            ]}\r\n            headerToolbar={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listMonth\",\r\n            }}\r\n            initialView=\"dayGridMonth\"\r\n            editable={true}\r\n            selectable={true}\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            select={handleDateClick}\r\n            eventClick={handleEventClick}\r\n            eventsSet={(events) => setCurrentEvents(events)}\r\n            initialEvents={[\r\n              {\r\n                id: \"12315\",\r\n                title: \"All-day event\",\r\n                date: \"2022-09-14\",\r\n              },\r\n              {\r\n                id: \"5123\",\r\n                title: \"Timed event\",\r\n                date: \"2022-09-28\",\r\n              },\r\n            ]}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}